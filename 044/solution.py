#! encoding: utf8
from profile_decorate import profile
from itertools import count
from math import sqrt

"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is
minimised; what is the value of D?
"""

PENTAGONAL_CACHE = dict()
IS_PENTAGONAL_CACHE = dict()
MAX_N_NOW = 0


def is_pentagonal(n_to_test=None):
    return ((sqrt(24 * n_to_test + 1) + 1) / 6).is_integer()


def get_pentagonal(n):
    return n * (3 * n - 1) / 2


@profile
def main():
    for kn in count(1):
        K = get_pentagonal(kn)
        for jn in range(1, kn):
            # the adjiant number difference cannot larger than D
            J = get_pentagonal(jn)
            if is_pentagonal(J + K):
                if is_pentagonal(K - J):
                    print 'the smallest D is {}'.format(K - J)
                    return True


if __name__ == '__main__':
    main()
